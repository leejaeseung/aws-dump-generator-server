extends ./head
include mixins/problemLink

block content
    #wrapper.d-flex
        // Sidebar
        #sidebar-wrapper.bg-light.border-right
            .sidebar-heading Problems &nbsp;
                i.fas.fa-laptop-code
            .list-group.list-group-flush
                - for (var i = 1; i <= size; i++) {
                    +problemLink(i)
                - }

        // Page Content
        #page-content-wrapper
            nav.navbar.navbar-expand-lg.navbar-light.bg-light.border-bottom
                i#menu-toggle(class="fa fa-toggle-on fa-lg" toggle="on")
                
                #navbarSupportedContent.collapse.navbar-collapse
                    ul.navbar-nav.ml-auto.mt-2.mt-lg-0
                        li.nav-item.active
                            a.nav-link(href='/')
                                i.fa.fa-home.fa-lg
                            span.sr-only (current)
                            
            .container-fluid
                h#description #{description}

                hr

                table#question_table.table
                    //- for (var i = 0; i < questions.length; i++) {
                        tr
                            label(for="id" + i)
                                td
                                    input(id="id" + i, type="checkbox")
                                td #{questions[i]}
                    //- }
                        

    // Menu Toggle Script
    script.
        const menu_toggle = document.getElementById("menu-toggle");

        $("#menu-toggle").click(function(e) {
            if (menu_toggle.getAttribute("toggle") == "on") {
                menu_toggle.setAttribute("toggle", "off");
                menu_toggle.setAttribute("class", "fa fa-toggle-off fa-lg");
            }
            else {
                menu_toggle.setAttribute("toggle", "on");
                menu_toggle.setAttribute("class", "fa fa-toggle-on fa-lg");
            }
            
            e.preventDefault();
            $("#wrapper").toggleClass("toggled");
        });

    script.
        const description = document.getElementById("description");
        const question_table = document.getElementById("question_table");

        problemCheck = function(pNum, qNum){
            fetch('/exam/problems/' + pNum, {
            method: "POST",
            headers: {"Content-Type": "application/json"}, 
            body: JSON.stringify({check: qNum})
            }).
            then(res => res.json()).
            then(data => {
                const problemCheck = document.getElementById("problemCheck" + data.pNum)

                if(data.isCheck){
                    if(!problemCheck.hasChildNodes()){
                        const icon = document.createElement("i")
                        icon.className = "fas fa-check"

                        problemCheck.appendChild(icon)
                    }

                    //problemLink.innerText = "Problem " + data.pNum + " " + data.userAnswer
                }
                else{
                    if(problemCheck.hasChildNodes())
                        problemCheck.removeChild(problemCheck.firstChild)
                }
            })
        }

        eventAdder = function(checkbox, idx, pNum){
            checkbox.addEventListener('click', () => {
                problemCheck(pNum, idx);
            })
        }
        
        getProblem = function(pNum) {
            fetch("/exam/problems/" + pNum, {method: "GET"}).
            then(res => res.json()).
            then(data => {
                // description
                description.innerText = data['description'];

                if(question_table.hasChildNodes())
                    question_table.removeChild(question_table.firstChild)
                
                var tbody = document.createElement('tbody');
                // question table
                //document.querySelectorAll("label").forEach(e => e.remove())
                for (var i = 0; i < data['questions'].length; i++) {

                    var tr = document.createElement('tr');
                    var td1 = document.createElement('td');
                    var td2 = document.createElement('td');
                    var checkbox = document.createElement('input');
                    var lb = document.createElement('label')

                    td2.style = "width: 2000px;"

                    checkbox.type = "checkbox";
                    checkbox.id = "checkbox" + i;
                    if(data.checks[i])
                        checkbox.checked = true
                    eventAdder(checkbox, i, pNum);

                    td1.appendChild(checkbox);
                    var questionInfo = document.createTextNode(data['questions'][i]);
                    td2.appendChild(questionInfo);

                    //lb.for = checkbox.id
                    
                    tr.appendChild(lb);
                    lb.appendChild(td1);
                    lb.appendChild(td2);

                    tbody.appendChild(tr)
                }

                question_table.appendChild(tbody);

                answer = data['answer'];
            })
        }

        getProblem(1)
        // 맨 처음 렌더링 됐을 때 1번 문제를 가져옴